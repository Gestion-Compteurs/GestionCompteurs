// <auto-generated />
using System;
using GestionCompteursElectriquesMoyenneTension.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionCompteursElectriquesMoyenneTension.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Batiment", b =>
                {
                    b.Property<int>("BatimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BatimentId");

                    b.ToTable("Batiments");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Cadran", b =>
                {
                    b.Property<int>("CadranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CadranModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("HeureActivation")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("HeureArret")
                        .HasColumnType("TEXT");

                    b.Property<int>("NombreRoues")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PrixWatt")
                        .HasColumnType("REAL");

                    b.HasKey("CadranId");

                    b.ToTable("Cadrans");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Compteur", b =>
                {
                    b.Property<int>("CompteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnneeCreation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VoltageMax")
                        .HasColumnType("INTEGER");

                    b.HasKey("CompteurId");

                    b.ToTable("Compteurs");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCadran", b =>
                {
                    b.Property<int>("InstanceCadranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CadranId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndexRoues")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstanceCompteurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstanceCadranId");

                    b.HasIndex("CadranId");

                    b.HasIndex("InstanceCompteurId");

                    b.ToTable("InstanceCadrans");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCompteur", b =>
                {
                    b.Property<int>("InstanceCompteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BatimentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompteurId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateInstallation")
                        .HasColumnType("TEXT");

                    b.HasKey("InstanceCompteurId");

                    b.HasIndex("BatimentId");

                    b.HasIndex("CompteurId");

                    b.ToTable("InstanceCompteurs");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Operateur", b =>
                {
                    b.Property<int>("OperateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OperateurId");

                    b.ToTable("Operateurs");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Releve", b =>
                {
                    b.Property<int>("ReleveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BatimentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateReleve")
                        .HasColumnType("TEXT");

                    b.Property<int>("InstanceCompteurId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperateurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReleveId");

                    b.HasIndex("InstanceCompteurId");

                    b.HasIndex("OperateurId");

                    b.ToTable("Releve");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.ReleveCadran", b =>
                {
                    b.Property<int>("ReleveCadranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndexRoues")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstanceCadranId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PrixWatt")
                        .HasColumnType("REAL");

                    b.HasKey("ReleveCadranId");

                    b.ToTable("ReleveCadrans");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCadran", b =>
                {
                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.Cadran", null)
                        .WithMany("InstancesCadran")
                        .HasForeignKey("CadranId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCompteur", null)
                        .WithMany("InstanceCadrans")
                        .HasForeignKey("InstanceCompteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCompteur", b =>
                {
                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.Batiment", null)
                        .WithMany("InstanceCompteurs")
                        .HasForeignKey("BatimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.Compteur", null)
                        .WithMany("InstanceCompteurs")
                        .HasForeignKey("CompteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Releve", b =>
                {
                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCompteur", null)
                        .WithMany("Releves")
                        .HasForeignKey("InstanceCompteurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionCompteursElectriquesMoyenneTension.Model.Entities.Operateur", null)
                        .WithMany("releves")
                        .HasForeignKey("OperateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Batiment", b =>
                {
                    b.Navigation("InstanceCompteurs");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Cadran", b =>
                {
                    b.Navigation("InstancesCadran");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Compteur", b =>
                {
                    b.Navigation("InstanceCompteurs");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.InstanceCompteur", b =>
                {
                    b.Navigation("InstanceCadrans");

                    b.Navigation("Releves");
                });

            modelBuilder.Entity("GestionCompteursElectriquesMoyenneTension.Model.Entities.Operateur", b =>
                {
                    b.Navigation("releves");
                });
#pragma warning restore 612, 618
        }
    }
}
